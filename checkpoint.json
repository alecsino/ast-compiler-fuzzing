[{"file_path": "input/c-c++-common/zero-scratch-regs-10.c", "file_name": "zero-scratch-regs-10.c", "file_content": "/* { dg-do run } */\n/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* nvptx*-*-* s390*-*-* loongarch64*-*-* } } } */\n/* { dg-options \"-O2\" } */\n\n#include <assert.h>\nint result = 0;\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"skip\")))\nfoo1 (int x)\n{\n  return (x + 1);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"used-gpr-arg\")))\nfoo2 (int x)\n{\n  return (x + 2);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"used-gpr\")))\nfoo3 (int x)\n{\n  return (x + 3);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"used-arg\")))\nfoo4 (int x)\n{\n  return (x + 4);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"used\")))\nfoo5 (int x)\n{\n  return (x + 5);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"all-gpr-arg\")))\nfoo6 (int x)\n{\n  return (x + 6);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"all-gpr\")))\nfoo7 (int x)\n{\n  return (x + 7);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"all-arg\")))\nfoo8 (int x)\n{\n  return (x + 8);\n}\n\nint \n__attribute__((noipa))\n__attribute__ ((zero_call_used_regs(\"all\")))\nfoo9 (int x)\n{\n  return (x + 9);\n}\n\nint main()\n{\n  result = foo1 (1);\n  result += foo2 (1);\n  result += foo3 (1);\n  result += foo4 (1);\n  result += foo5 (1);\n  result += foo6 (1);\n  result += foo7 (1);\n  result += foo8 (1);\n  result += foo9 (1);\n  assert (result == 54);\n  return 0;\n}\n", "compiler_stats": {"last": 181, "gcc-9": 99, "gcc-10": 99, "gcc-11": 181}, "asan_tested": true, "max_rateo": [1.83, "gcc-9"], "strategy_mutation": "Not mutated", "error_message": null}]